'use client';

import React, { useEffect, useRef, useState } from 'react';
import Image from 'next/image';

// –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
const staticCards = [
  { 
    src: 'https://images.unsplash.com/photo-1556157382-97eda2d62296?w=280&h=320&fit=crop&crop=faces', 
    fallbackSrc: 'https://picsum.photos/280/320?random=1',
    title: '35 000 000 —Ç–≥', 
    subtitle: '–û–±–æ—Ä–æ—Ç –∫–æ–º–∞–Ω–¥—ã', 
    person: '–ê–π–¥–∞—Ä –ö–∞—Ä–∏–º–æ–≤', 
    role: '–¢–æ–ø –º–µ–Ω–µ–¥–∂–µ—Ä'
  },
  { 
    src: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=2',
    title: '–õ—É—á—à–∏–π 2025', 
    subtitle: '–ü–∞—Ä—Ç–Ω—ë—Ä –≥–æ–¥–∞', 
    person: '–ê—Å–µ–ª—å –ù—É—Ä–ª–∞–Ω–æ–≤–∞', 
    role: '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä'
  },
  { 
    src: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=3',
    title: 'Tannur Events 2025', 
    subtitle: '–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∏–≤–µ–Ω—Ç–∞ 22.08', 
    person: '–î–∞–Ω–∏—è—Ä –û–º–∞—Ä–æ–≤', 
    role: '–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç'
  },
  { 
    src: 'https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=4',
    title: '2 345 –¥–∏–ª–µ—Ä–æ–≤', 
    subtitle: '–ó–∞ 1 –≥–æ–¥ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ', 
    person: '–ñ–∞–Ω–∞—Ä–∞ –°–µ–π—Ç–∫–∞–∑—ã', 
    role: '–ë–∏–∑–Ω–µ—Å –ø–∞—Ä—Ç–Ω–µ—Ä'
  },
  { 
    src: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=5',
    title: '13 000 932 —Ç–≥', 
    subtitle: '–ó–∞ –æ–¥–Ω—É –Ω–µ–¥–µ–ª—é', 
    person: '–ù—É—Ä–ª–∞–Ω –ê–±–∏—à–µ–≤', 
    role: '–°—Ç–∞—Ä—à–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç'
  },
  { 
    src: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=6',
    title: '86 —Ä–µ–≥–∏–æ–Ω–æ–≤', 
    subtitle: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ–¥–∞–∂', 
    person: '–ö–∞–º–∏–ª–∞ –î–æ—Å–∂–∞–Ω–æ–≤–∞', 
    role: '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞'
  },
  { 
    src: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=7',
    title: '48 —á–∞—Å–æ–≤', 
    subtitle: '–î–æ –ø–æ–ª–Ω–æ–π —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏', 
    person: '–ï—Ä–ª–∞–Ω –¢–æ–∫—Ç–∞—Ä–æ–≤', 
    role: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é'
  },
  { 
    src: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=8',
    title: '1 200 –∑–∞–∫–∞–∑–æ–≤', 
    subtitle: '–¢–æ–ª—å–∫–æ –∑–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ', 
    person: '–ê—Ä–∏–Ω–∞ –ö–∞–∑—ã–±–µ–∫–æ–≤–∞', 
    role: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–¥–µ–ª–∞'
  },
  { 
    src: 'https://images.unsplash.com/photo-1463453091185-61582044d556?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=9',
    title: 'Tannur Academy', 
    subtitle: '300 –Ω–æ–≤—ã—Ö –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤', 
    person: '–ë–µ–∫–∑–∞—Ç –ê–ª–∏–µ–≤', 
    role: '–¢—Ä–µ–Ω–∏–Ω–≥ –º–µ–Ω–µ–¥–∂–µ—Ä'
  },
  { 
    src: 'https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=10',
    title: '–ü—Ä–µ–º–∏—è –±—Ä–µ–Ω–¥–∞', 
    subtitle: '–ü—Ä–∏–∑–Ω–∞–Ω–∏–µ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏', 
    person: '–î–∏–∞–Ω–∞ –ï—Ä–∂–∞–Ω–æ–≤–∞', 
    role: '–ë—Ä–µ–Ω–¥ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä'
  },
  { 
    src: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=280&h=320&fit=crop&crop=faces',
    fallbackSrc: 'https://picsum.photos/280/320?random=11',
    title: '10 000 –ø–æ–¥–ø–∏—Å–æ–∫', 
    subtitle: '–¢–æ–ª—å–∫–æ –∑–∞ –∞–≤–≥—É—Å—Ç', 
    person: '–°–∞–Ω–∂–∞—Ä –£—Ç–µ–±–∞–µ–≤', 
    role: '–¶–∏—Ñ—Ä–æ–≤–æ–π —ç–∫—Å–ø–µ—Ä—Ç'
  },
];

const duplicatedCards = [...staticCards, ...staticCards, ...staticCards];

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
interface CardProps {
  card: typeof staticCards[0];
  index: number;
}

const Card: React.FC<CardProps> = ({ card, index }) => {
  const [imageError, setImageError] = useState(false);
  const [imageLoaded, setImageLoaded] = useState(false);
  const [currentSrc, setCurrentSrc] = useState(card.src);

  const handleImageError = () => {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${currentSrc}`);
    if (currentSrc === card.src && card.fallbackSrc) {
      // –ü—Ä–æ–±—É–µ–º fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      console.log(`üîÑ –ü—Ä–æ–±—É–µ–º fallback: ${card.fallbackSrc}`);
      setCurrentSrc(card.fallbackSrc);
      setImageError(false);
    } else {
      setImageError(true);
    }
  };

  const handleImageLoad = () => {
    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${currentSrc}`);
    setImageLoaded(true);
  };

  return (
    <div
      key={`${index}-${card.person}`}
      className="relative w-[280px] h-[320px] flex-shrink-0 rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 bg-gradient-to-br from-slate-800 to-slate-900 group"
      style={{ userSelect: 'none' }}
    >
      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–∫–∏ */}
      {!imageError ? (
        <>
          {/* Skeleton loader –ø–æ–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è */}
          {!imageLoaded && (
            <div className="absolute inset-0 bg-gray-300 animate-pulse flex items-center justify-center">
              <div className="text-gray-500 text-sm">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            </div>
          )}
          
          <Image
            src={currentSrc}
            alt={card.person}
            fill
            sizes="(max-width: 768px) 100vw, 280px"
            className={`object-cover group-hover:scale-105 transition-transform duration-500 pointer-events-none ${
              imageLoaded ? 'opacity-100' : 'opacity-0'
            }`}
            draggable={false}
            priority={index < 4}
            onError={handleImageError}
            onLoad={handleImageLoad}
            // –î–æ–±–∞–≤–ª—è–µ–º unoptimized –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
            unoptimized={process.env.NODE_ENV === 'development'}
          />
        </>
      ) : (
        /* Fallback –ø—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */
        <div className="absolute inset-0 bg-gradient-to-br from-slate-600 to-slate-800 flex items-center justify-center">
          <div className="text-center text-white">
            <div className="text-4xl mb-2">üñºÔ∏è</div>
            <div className="text-xs opacity-75">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</div>
            <div className="text-xs opacity-50 mt-1">{currentSrc}</div>
          </div>
        </div>
      )}

      {/* –¢–µ–º–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π */}
      <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-transparent pointer-events-none" />

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–æ—á–∫–µ */}
      <div className="absolute bottom-0 left-0 right-0 p-4 text-white pointer-events-none">
        <div className="inline-block bg-[#D77E6C] text-white px-2 py-1 rounded-md text-xs font-medium mb-2">
          Tannur Cosmetics
        </div>

        <div className="space-y-1">
          <h3 className="font-bold text-lg leading-tight">{card.person}</h3>
          <p className="text-sm opacity-90">{card.role}</p>
        </div>

        <div className="mt-2 pt-2 border-t border-white/20">
          <p className="font-semibold text-sm">{card.title}</p>
          <p className="text-xs opacity-80">{card.subtitle}</p>
        </div>
      </div>
    </div>
  );
};

export default function HorizontalMediaScroll() {
  const scrollRef = useRef<HTMLDivElement>(null);
  const contentRef = useRef<HTMLDivElement>(null);
  const [isPaused, setIsPaused] = useState(false);
  const [isDragging, setIsDragging] = useState(false);
  const [startX, setStartX] = useState(0);
  const [scrollLeft, setScrollLeft] = useState(0);
  
  const SCROLL_SPEED = 50;
  const animationRef = useRef<number>(0);
  const lastTimeRef = useRef<number>(0);
  const currentPositionRef = useRef<number>(0);

  // Debug: –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  useEffect(() => {
    if (typeof window !== 'undefined') {
      console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ img —Ç–µ–≥–∏ –±–µ–∑ Next.js Image');
    }
  }, []);

  useEffect(() => {
    const scrollContainer = scrollRef.current;
    const contentContainer = contentRef.current;
    if (!scrollContainer || !contentContainer || isDragging) return;

    const animate = (timestamp: number) => {
      if (!lastTimeRef.current) {
        lastTimeRef.current = timestamp;
      }

      const deltaTime = timestamp - lastTimeRef.current;
      lastTimeRef.current = timestamp;

      if (!isPaused && !isDragging) {
        const pixelsToScroll = (SCROLL_SPEED * deltaTime) / 1000;
        currentPositionRef.current += pixelsToScroll;

        const singleSetWidth = contentContainer.scrollWidth / 3;

        if (currentPositionRef.current >= singleSetWidth) {
          currentPositionRef.current = currentPositionRef.current - singleSetWidth;
        }

        scrollContainer.scrollLeft = currentPositionRef.current;
      }

      animationRef.current = requestAnimationFrame(animate);
    };

    animationRef.current = requestAnimationFrame(animate);

    return () => {
      if (animationRef.current) {
        cancelAnimationFrame(animationRef.current);
      }
    };
  }, [isPaused, isDragging]);

  const handleMouseDown = (e: React.MouseEvent) => {
    const scrollContainer = scrollRef.current;
    if (!scrollContainer) return;

    setIsDragging(true);
    setStartX(e.pageX - scrollContainer.offsetLeft);
    setScrollLeft(scrollContainer.scrollLeft);
    scrollContainer.style.cursor = 'grabbing';
    scrollContainer.style.userSelect = 'none';
  };

  const handleMouseMove = (e: React.MouseEvent) => {
    if (!isDragging) return;
    e.preventDefault();
    
    const scrollContainer = scrollRef.current;
    if (!scrollContainer) return;

    const x = e.pageX - scrollContainer.offsetLeft;
    const walk = (x - startX) * 1.5;
    const newScrollLeft = scrollLeft - walk;
    
    scrollContainer.scrollLeft = newScrollLeft;
    currentPositionRef.current = newScrollLeft;
  };

  const handleMouseUp = () => {
    const scrollContainer = scrollRef.current;
    if (!scrollContainer) return;

    setIsDragging(false);
    scrollContainer.style.cursor = 'grab';
    scrollContainer.style.userSelect = 'auto';
  };

  const handleMouseLeave = () => {
    if (isDragging) {
      handleMouseUp();
    }
    setIsPaused(false);
  };

  const handleTouchStart = (e: React.TouchEvent) => {
    const scrollContainer = scrollRef.current;
    if (!scrollContainer) return;

    setIsDragging(true);
    setStartX(e.touches[0].pageX - scrollContainer.offsetLeft);
    setScrollLeft(scrollContainer.scrollLeft);
  };

  const handleTouchMove = (e: React.TouchEvent) => {
    if (!isDragging) return;
    
    const scrollContainer = scrollRef.current;
    if (!scrollContainer) return;

    const x = e.touches[0].pageX - scrollContainer.offsetLeft;
    const walk = (x - startX) * 1.5;
    const newScrollLeft = scrollLeft - walk;
    
    scrollContainer.scrollLeft = newScrollLeft;
    currentPositionRef.current = newScrollLeft;
  };

  const handleTouchEnd = () => {
    setIsDragging(false);
  };

  return (
    <div className="relative h-[400px] overflow-hidden w-full bg-gradient-to-r from-slate-50 to-white">
      <div className="absolute left-[-40px] top-0 h-full w-48 z-10 pointer-events-none">
        <div className="h-full w-full bg-gradient-to-r from-white via-white/60 to-transparent blur-2xl" />
      </div>

      <div className="absolute right-[-40px] top-0 h-full w-48 z-10 pointer-events-none">
        <div className="h-full w-full bg-gradient-to-l from-white via-white/60 to-transparent blur-2xl" />
      </div>

      <div
        ref={scrollRef}
        className="h-full overflow-x-hidden py-8 px-8 cursor-grab"
        style={{ 
          scrollbarWidth: 'none',
          msOverflowStyle: 'none',
          WebkitOverflowScrolling: 'touch'
        } as React.CSSProperties}
        onMouseEnter={() => setIsPaused(true)}
        onMouseLeave={handleMouseLeave}
        onMouseDown={handleMouseDown}
        onMouseMove={handleMouseMove}
        onMouseUp={handleMouseUp}
        onTouchStart={handleTouchStart}
        onTouchMove={handleTouchMove}
        onTouchEnd={handleTouchEnd}
      >
        <div 
          ref={contentRef}
          className="flex gap-6 h-full items-center"
          style={{ width: 'max-content' }}
        >
          {duplicatedCards.map((card, index) => (
            <Card key={`${index}-${card.person}`} card={card} index={index} />
          ))}
        </div>
      </div>

      <style jsx global>{`
        div::-webkit-scrollbar {
          display: none;
        }
      `}</style>
    </div>
  );
}